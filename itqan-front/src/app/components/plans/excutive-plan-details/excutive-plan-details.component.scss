.verticalline {
  border-right: 2px solid black; /* Adjust thickness and color as needed */
  height: auto; /* Adjust height as needed */
}

hr{
    // padding: 1px;
    border-top-width: 0px; 
    border: 1px solid black;
}
:host ::ng-deep .p-accordion{
    font-family: arabicFont !important;
}
:host ::ng-deep .p-accordion .p-accordion-header .p-accordion-header-link{
    padding: 0;
    background-color: #C3DDFD;
}
:host ::ng-deep .p-calendar  .p-inputtext  {
padding: 0px !important;
// padding-top: 0px ;
}
:host ::ng-deep .p-dropdown {
    // background: #f8f085;
    border: 1px solid #d1d5db;
    transition: background-color 0.2s, color 0.2s, border-color 0.2s, box-shadow 0.2s;
    border-radius: 6px;
    width: 100%;
    border-radius: 0px;
    padding-top:3px;
 padding-bottom:3px
    // font-family: arabicFont !important;
}
:host ::ng-deep  .p-inputtext {
    padding: .2rem;
     border-radius: 0px;
}
:host ::ng-deep #custonm{
   background: #f8f085 !important;  
}
:host ::ng-deep .p-dropdown-items-wrapper{
    z-index: 9999;
}
 :host ::ng-deep .p-overlay {
     z-index: 99999 !important; 
 }
 :host ::ng-deep .p-dropdown-items {
  z-index: 99999 !important; 
 }
 :host ::ng-deep .p-dropdown-panel  {
    z-index: 99999 !important;  
 }
 select{
padding: 0;
border: 0;
 }
 /* Custom scrollbar styles */
::-webkit-scrollbar {
  width: 2px; /* Width of the scrollbar */
  height: 4px;
}

::-webkit-scrollbar-thumb {
  background-color: #acaaaa; /* Color of the scrollbar thumb */
  border-radius: 6px; /* Radius of the scrollbar thumb */
}

::-webkit-scrollbar-thumb:hover {
  background-color: #555; /* Color of the scrollbar thumb on hover */
}

::-webkit-scrollbar-track {
  background: #f1f1f1; /* Color of the scrollbar track */
}

.Container{
    box-sizing: border-box !important;
}
table{
    box-sizing: border-box !important;
    text-xs {
      font-size: smaller;
    }

}
/* Assuming you have a class for the container div */
.relative {
    position: relative;
}

/* Assuming you have a class for the absolute div */
.absolute {
    position: absolute;
}

/* Assuming you have a class for the input field */
.input-field {
    /* Adjust this value to properly align the placeholder */
    padding-right: 40px; /* Adjust according to the width of your icon */
}
select{
  padding-right: 0rem !important;
}

:host ::ng-deep .p-inputtext	{
  padding: .1rem;
  border: unset;
}
input:focus{
  outline: none;
}
.arrow{
  position: relative;
  // width:120px;
  background: #31C48D;
  height:auto;
  line-height: 20px;
  margin-bottom:.2rem; 
  text-align:center;
  color:#fff;
}
/*bottom arrow*/

.arrow-bottom:after{
  position: absolute;
  bottom: -10px;
  left:50%;
  margin-left: -10px;
  content:"";
  display:block;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-top: 10px solid #31C48D; 
}
:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {
     text-align: right; 
 padding: .2rem .9rem; 
    border: 1px solid #cfd1d3;
    border-width: 0 0 1px 0;
    font-weight: 700;
    color: black;
 background: rgb(198, 223, 251); 
    transition: box-shadow 0.2s;
}
:host ::ng-deep .p-datatable .p-datatable-tbody> tr > td {
     text-align: right ; 
      padding: .2rem .9rem; 
       border: 1px solid #dbdbdf;
       text-align: center;
}


.input-search{
  border: unset;
}
 .checkbox {
    --border-default: #bbbbc1;
    --border-hover: #9898a3;
    --active: black;
    --active-tick: black;
    display: block;
    width: 18px;
    height: 18px;
    cursor: pointer;
    position: relative;
    -webkit-tap-highlight-color: transparent;
    svg {
        display: block;
        position: absolute;
    }
    input {
        display: block;
        outline: none;
        border: none;
        padding: 0;
        margin: 0;
        -webkit-appearance: none;
        width: 18px;
        height: 18px;
        border-radius: 36% / 36%;
        box-shadow: inset 0 0 0 1.5px var(--border, var(--border-default));
        background: white;
        transition: background .25s linear, box-shadow .25s linear;
        & + svg {
            width: 21px;
            height: 18px;
            left: 0;
            top: 0;
            color: var(--active);
            .tick {
                stroke-dasharray: 20;
                stroke-dashoffset: var(--stroke-dashoffset, 20);
                transition: stroke-dashoffset .2s;
                &.mask { 
                    stroke: var(--active-tick);
                }
            }
            & + svg {
                width: 11px;
                height: 11px;
                fill: none;
                stroke: var(--active);
                stroke-width: 1.25;
                stroke-linecap: round;
                top: -6px;
                right: -10px;
                stroke-dasharray: 4.5px;
                stroke-dashoffset: 13.5px;
                pointer-events: none;
                animation: var(--animation, none) .2s ease .175s;
            }
        }
        &:checked {
            --background: var(--active);
            --border: var(--active);
            & + svg {
                --stroke-dashoffset: 0;
                & + svg {
                    --animation: check;
                }
            }
        }
    }
    &:hover {
        input {
            &:not(:checked) {
                --border: var(--border-hover);
            }
        }
    }
}